variables:
  DOCKER_COMPOSE_VERSION: "2.23.3"
  DOCKER_VERSION: "24.0"
  # Instruct docker clients to use the daemon of DinD, use port 2375 for non-tls connections.
  DOCKER_HOST: "tcp://docker:2375"
  # Instruct Docker not to start over TLS.
  DOCKER_TLS_CERTDIR: ""
  # Improve performance with overlayfs.
  DOCKER_DRIVER: overlay2

  MAVEN_REPO_DIR: $CI_PROJECT_DIR/.m2/repository

  # `showDateTime` will show the passed time in milliseconds. You need to specify `--batch-mode` to make this work.
  MAVEN_OPTS: >-
    -Xmx256m
    -Dhttps.protocols=TLSv1.2
    -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository
    -Dorg.slf4j.simpleLogger.showDateTime=true
    -Djava.awt.headless=true

  # As of Maven 3.3.0 instead of this you MAY define these options in `.mvn/maven.config` so the same config is used
  # when running from the command line.
  # As of Maven 3.6.1, the use of `--no-tranfer-progress` (or `-ntp`) suppresses download and upload messages. The use
  # of the `Slf4jMavenTransferListener` is no longer necessary.
  # `installAtEnd` and `deployAtEnd` are only effective with recent version of the corresponding plugins.
  MAVEN_CLI_OPTS: >-
    --batch-mode
    --errors
    --fail-at-end
    --show-version
    --no-transfer-progress
#    -DinstallAtEnd=true
#    -DdeployAtEnd=true

  # Specify the timezone - used by date tests
  TZ: "Europe/Brussels"
  # Specify a language - used by LocaleContextHolder
  LANG: "en_US.UTF-8"

  ORACLE_INIT_SQL: |
    CREATE USER axt IDENTIFIED BY across_test;
    GRANT CONNECT, RESOURCE TO axt;
    GRANT CREATE SESSION, GRANT ANY PRIVILEGE TO axt;
    GRANT UNLIMITED TABLESPACE TO axt;
    GRANT SELECT ON SYS.DBA_RECYCLEBIN TO AXT;

  NODEJS_DOCKER_IMAGE_VERSION: 12


# I think this example workflow is exactly what we need:
# https://docs.gitlab.com/ee/ci/yaml/workflow.html#switch-between-branch-pipelines-and-merge-request-pipelines
# This runs:
# - Branch pipelines when a merge request is not open for the branch.
# - Merge request pipelines when a merge request is open for the branch.
workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
      when: never
    - if: $CI_COMMIT_BRANCH


# This template uses the latest Maven 3 release, e.g., 3.8.6, and OpenJDK 8 (LTS)
# for verifying and deploying images
# Maven 3.8.x REQUIRES HTTPS repositories.
# See https://maven.apache.org/docs/3.8.1/release-notes.html#how-to-fix-when-i-get-a-http-repository-blocked for more.
image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/maven:3.9-eclipse-temurin-8

# Cache downloaded dependencies and plugins between builds.
# To keep cache across branches add 'key: "$CI_JOB_NAME"'
# Be aware that `mvn deploy` will install the built jar into this repository. If you notice your cache size
# increasing, consider adding `-Dmaven.install.skip=true` to `MAVEN_OPTS` or in `.mvn/maven.config`
cache:
  paths:
    - $MAVEN_REPO_DIR
    - "**/frontend/node_modules"

after_script:
  - rm -rf $MAVEN_REPO_DIR/com/foreach # Don't cache this

#curl:google:
#  script:
#    - curl --connect-timeout 10 https://www.google.com
#    - echo "Success Google"
#
#curl:nexus-foreach:
#  script:
#    - curl --connect-timeout 10 https://repository.foreach.be/nexus/repository/public/archetype-catalog.xml
#    - echo "Success Nexus Foreach"

.frontend:
  stage: test
  # TODO: node:16 does not work for ax-bootstrap-theme, but does for bootstrap-ui-module and entity-module:
  # image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/node:16
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/node:${NODEJS_DOCKER_IMAGE_VERSION}
  script:
    - cd ${MODULE_NAME}/src/main/frontend
    - yarn install
    - yarn build:prod

frontend:bootstrap-ui-module:
  extends:
    - .frontend
  variables:
    MODULE_NAME: bootstrap-ui-module
  artifacts:
    paths:
      - bootstrap-ui-module/src/main/resources/views/static/BootstrapUiModule/

frontend:entity-module:
  extends:
    - .frontend
  variables:
    MODULE_NAME: entity-module
  artifacts:
    paths:
      - entity-module/src/main/resources/views/static/entity/

frontend:ax-bootstrap-theme:
  extends:
    - .frontend
  variables:
    MODULE_NAME: ax-bootstrap-theme
  artifacts:
    paths:
      - ax-bootstrap-theme/src/main/resources/views/static/adminweb-themes/


build:test-apps:
  stage: test
  needs:
    - frontend:bootstrap-ui-module
    - frontend:entity-module
    # - frontend:ax-bootstrap-theme
  script:
    # - 'mvn $MAVEN_CLI_OPTS dependency:purge-local-repository -DmanualInclude=com.foreach -DreResolve=false'
    - find $CI_PROJECT_DIR/.m2/repository/com/foreach/ -type d -name "*-SNAPSHOT" | xargs rm -rf || echo "No snapshots to delete"
    - 'mvn $MAVEN_CLI_OPTS package -DskipTests'
  artifacts:
    when: always
    paths:
      - '*/target/*-exec.jar'


.end2end:
  stage: test
  needs:
    - build:test-apps
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/docker:${DOCKER_VERSION}
  services:
    - name: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/docker:${DOCKER_VERSION}-dind
      alias: docker
      command: [ "--tls=false" ]
  before_script:
     - docker login -u $CI_DEPENDENCY_PROXY_USER -p $CI_DEPENDENCY_PROXY_PASSWORD $CI_DEPENDENCY_PROXY_SERVER
  script:
    - cd $MODULE_NAME
    - echo "DOCKER_REPOSITORY=${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}" > .env
    - cat .env
    - docker-compose --ansi=never up e2e
  after_script:
    - docker-compose down
  artifacts:
    when: always
    reports:
      junit:
        - $MODULE_NAME/src/test/e2e/tests/cypress/out/*.xml
    paths:
      - $MODULE_NAME/src/test/e2e/tests/cypress/out/videos/

end2end:bootstrap-ui-module:
  extends:
    - .end2end
  variables:
    MODULE_NAME: bootstrap-ui-module-test

end2end:entity-module:
  extends:
    - .end2end
  variables:
    MODULE_NAME: entity-module-test-application


.verify:
  stage: test
  script:
    # - 'mvn $MAVEN_CLI_OPTS dependency:purge-local-repository -DmanualInclude=com.foreach -DreResolve=false'
    - find $CI_PROJECT_DIR/.m2/repository/com/foreach/ -type d -name "*-SNAPSHOT" | xargs rm -rf || echo "No snapshots to delete"
    - 'mvn $MAVEN_CLI_OPTS verify'
  artifacts:
    when: always
    reports:
      junit:
        - '**/target/surefire-reports/TEST-*.xml'
#  except:
#    variables:
#      - $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

verify:jdk8:
  extends:
    - .verify
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/maven:3.9-eclipse-temurin-8

#verify:jdk11:
#  extends:
#    - .verify
#  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/maven:3.9-eclipse-temurin-11
#
#verify:jdk17:
#  extends:
#    - .verify
#  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/maven:3.9-eclipse-temurin-17
#
#verify:jdk21:
#  extends:
#    - .verify
#  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/maven:3.9-eclipse-temurin-21


.itest:
  stage: test
  script:
    # - 'mvn $MAVEN_CLI_OPTS dependency:purge-local-repository -DmanualInclude=com.foreach -DreResolve=false'
    - find $CI_PROJECT_DIR/.m2/repository/com/foreach/ -type d -name "*-SNAPSHOT" | xargs rm -rf || echo "No snapshots to delete"
    - 'mvn $MAVEN_CLI_OPTS test-compile failsafe:integration-test failsafe:verify -DacrossTest.datasource="$ACROSS_TEST_DATASOURCE"'
  artifacts:
    when: always
    reports:
      junit:
        - '**/target/failsafe-reports/TEST-*.xml'

itest:h2:
  extends:
    - .itest
  variables:
    ACROSS_TEST_DATASOURCE: h2

itest:mssql:
  extends:
    - .itest
  variables:
    ACROSS_TEST_DATASOURCE: mssql
  services:
    - name: mcr.microsoft.com/mssql/server:2017-latest
      alias: 'mssql'
      variables:
        ACCEPT_EULA: Y
        MSSQL_SA_PASSWORD: across_tEst
        MSSQL_PID: Developer

itest:mysql:
  extends:
    - .itest
  variables:
    ACROSS_TEST_DATASOURCE: mysql
  services:
    - name: '${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/mysql:8.0'
      alias: mysql
      variables:
        MYSQL_ROOT_PASSWORD: ''
        MYSQL_DATABASE: axt
        MYSQL_USER: axt
        MYSQL_PASSWORD: across_test
        MYSQL_ALLOW_EMPTY_PASSWORD: 'true'

itest:oracle:
  extends:
    - .itest
  variables:
    ACROSS_TEST_DATASOURCE: oracle
  services:
    - name: '${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/gvenzl/oracle-xe:18.4.0-slim' # This what testcontainers 1.18.1 uses
      alias: 'oracle'
      variables:
        ORACLE_ALLOW_REMOTE: 'true'
        ORACLE_ENABLE_XDB: 'true'
        # IT IS SAID THAT THIS IS MORE PERFORMANT IN DOCKER
        ORACLE_DISABLE_ASYNCH_IO: 'true'
        ORACLE_PASSWORD: across_test
      # You cannot mount volumes in a service container, this is a workaround for that:
      # Solution inspired by: https://stackoverflow.com/questions/72201392/mounting-a-volume-for-a-gitlab-service
      # Doesn't work: the /docker-entrypoint-initdb.d directory doesn't exist in the image, and creating it gives:
      #   mkdir: cannot create directory '/docker-entrypoint-initdb.d/': Permission denied
      # However: /container-entrypoint-initdb.d does exist! See: https://github.com/gvenzl/oci-oracle-xe/issues/108
      # entrypoint: ['/bin/bash', "-c", 'echo "c" > /container-entrypoint-initdb.d/init.sql && container-entrypoint.sh']
      entrypoint:
        - '/bin/bash'
        - '-c'
        - |
          echo "$ORACLE_INIT_SQL" > /container-entrypoint-initdb.d/init.sql
          cat /container-entrypoint-initdb.d/*
          wc -l /container-entrypoint-initdb.d/*
          container-entrypoint.sh

itest:postgresql:
  extends:
    - .itest
  variables:
    ACROSS_TEST_DATASOURCE: postgres
  services:
    - name: '${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/postgres:14.8'
      alias: postgres
      variables:
        POSTGRES_DB: axt
        POSTGRES_USER: axt
        POSTGRES_PASSWORD: across_test

deploy:foreach:
  stage: deploy
  before_script:
    - apt-get update
    - apt-get -y install gpg
    - gpg --pinentry-mode loopback --passphrase $ACROSS_GPG_PASSPHRASE --import $ACROSS_GPG_PRIVATE_KEY
    - gpg --list-keys
  script:
    - mvn $MAVEN_CLI_OPTS --settings ci_settings.xml --activate-profiles deploy,across deploy -DskipTests
#  only:
#    variables:
#      - $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
#

# TODO: on push of a tag, run a deploy to Sonatype
# Disadvantage is that that will run all integration tests again, unless we want disable those on a tag push
