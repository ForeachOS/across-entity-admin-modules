<!DOCTYPE html>
<!--
  Copyright 2014 the original author or authors

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  -->
<html xmlns:th="http://www.thymeleaf.org">
<head>
	<title>List and configure loggers</title>
</head>
<body th:fragment="content">
<div class="row">
	<h3>Loggers configuration</h3>

	<div th:if="${feedback}" class="alert alert-dismissable alert-success">
		<button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
		<span th:text="${feedback}">XX loggers have been updated.</span>
	</div>

	<form role="form" method="post" th:action="@{#}" onsubmit="disableNonDirty(this)">
		<div class="form-group">
			<input type="reset" value="Reset" class="btn btn-default"/>
			<input type="submit" value="Save" class="btn btn-default"/>
		</div>
		<div class="form-group">
			<table class="table">
				<tr th:each="entry : ${loggers}">
					<td th:text="${entry.key}">logger name</td>
					<td>
						<select onchange="markDirty(event)" th:name="${entry.key}">
							<option th:each="level : ${levels}" th:value="${level}" th:text="${level}"
							        th:selected="${level eq entry.value}">log level
							</option>
						</select>
					</td>
				</tr>
			</table>
		</div>
		<div class="form-group">
			<input type="reset" value="Reset" class="btn btn-default"/>
			<input type="submit" value="Save" class="btn btn-default"/>
		</div>
	</form>

	<div th:replace="th/across :: table (${appenders})"></div>

	<script th:inline="javascript" type="text/javascript">
		/*<![CDATA[*/
		function markDirty( event )
		{
			var target = event.srcElement, isOriginalValue = function ( target )
			{
				for ( var i = 0; i < target.options.length; i++ ) {
					var option = target.options[i];
					if ( option.attributes['selected'] ) {
						return option.value === target.value;
					}
				}
			};
			if ( !isOriginalValue( target ) && target.className.indexOf( 'dirty' ) === -1 ) {
				if ( target.className.length > 0 ) {
					target.className += ' ';
				}
				target.className += 'dirty';
			}
			if ( isOriginalValue( target ) && target.className.indexOf( 'dirty' ) > -1 ) {
				target.className = target.className.replace( / ?\bdirty\b/, '' );
			}
		}
		function disableNonDirty( form )
		{
			var selectNodes = document.getElementsByTagName( 'select' );
			for ( var i = 0; i < selectNodes.length; i++ ) {
				var node = selectNodes[i];
				if ( node.className.indexOf( 'dirty' ) === -1 ) {
					node.disabled = true;
				}
			}
		}
		/*]]>*/
	</script>
</div>

</body>
</html>